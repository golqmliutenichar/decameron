openapi: 3.0.0
info:
  title: Decameron API
  version: 1.0.0
  description: API specification for the Decameron app.
servers:
  - url: http://127.0.0.1:5000
    description: Local development server
paths:
  /signup:
    post:
      summary: User Signup
      description: Register a new user with username, email, and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '201':
          description: User registered successfully
        '409':
          description: Username or email already exists
  /login:
    post:
      summary: User Login
      description: Login a user using username or email and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username_or_email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
        '401':
          description: Incorrect password
        '404':
          description: User not found
  /profile/{username}:
    get:
      summary: View User Profile
      description: Get user profile details by username.
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User profile data
        '404':
          description: User not found
  /profile/update:
    put:
      summary: Update User Profile
      description: Update user profile details such as region, favorite game, and description.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                region:
                  type: string
                favorite_game:
                  type: string
                description:
                  type: string
      responses:
        '200':
          description: Profile updated successfully
  /post/create:
    post:
      summary: Create Post
      description: Create a new post to invite players.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                game:
                  type: string
                platform:
                  type: string
                player_count:
                  type: integer
                description:
                  type: string
      responses:
        '201':
          description: Post created successfully
  /posts:
    get:
      summary: View All Posts
      description: Retrieve all available posts.
      responses:
        '200':
          description: List of posts
  /post/join:
    post:
      summary: Request to Join Post
      description: Send a join request for a post.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                post_id:
                  type: integer
                requester_username:
                  type: string
      responses:
        '201':
          description: Join request sent
  /post/join/manage:
    put:
      summary: Manage Join Requests
      description: Accept or reject a join request.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                post_id:
                  type: integer
                requester_username:
                  type: string
                action:
                  type: string
                  enum: [accept, reject]
      responses:
        '200':
          description: Join request updated
        '400':
          description: Invalid action
  /admin/users:
    get:
      summary: View All Users
      description: Admin view of all users in the system.
      responses:
        '200':
          description: List of users
  /admin/posts:
    get:
      summary: View All Posts (Admin)
      description: Admin view of all posts.
      responses:
        '200':
          description: List of posts
  /admin/posts/{post_id}:
    delete:
      summary: Delete Post
      description: Admin action to delete a post by ID.
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Post deleted successfully
  /admin/maintenance:
    post:
      summary: Maintenance Mode
      description: Set the application to maintenance mode.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [on, off]
      responses:
        '200':
          description: Maintenance mode updated
        '400':
          description: Invalid status value
